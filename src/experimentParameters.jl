freq_base=60 # Base frequency (Not-ML)
ibrBus=[3, 6, 8] # Buses to place IBR generation at (Not-ML)
GF=0.08  # % of Grid-forming inverters for nominal case (Not-ML)
Gf=0.42 # % of Grid-following inverters for nominal case (Not-ML)
resSize=1000  # Size of the reservoir
maxSimStep=1.0 # Max step in the power simualtion (Not-ML)
trainSizes = [10:10:40;] # Number of times to sample the parameter space for training CTESN _> Used in trainSize.jl and trainSizeNL.jl
LB = [0.1, 0.1] # Lower-bounds on the 1) % of IBR at each node and 2) % of those IBR that are grid-forming (Not-ML)
UB = [0.7, 0.5] # Upper-bounds on the 1) % of IBR at each node and 2) % of those IBR that are grid-forming (Not-ML)
testSize=200 # Test size for benchmarking CTESN performance
tStop=70.0 # End time of simualtion (Not-ML)
tspan=(0.0, tStop) # Time duration of simualtion (Not-ML)
interpolateStep=0.1 # Granularity to compare true soltuion to CTESN
interpolateTime=0.0:interpolateStep:tStop
tripTime=10.0 # Time at which we disconnect a syncronous machine (Not-ML)
testParams=[[0.6, 0.5], [0.6, 0.17], [0.3, 0.17]] # Sample test points used to compare predicted to true solution in sampleTraces.jl
trainSamples = 15 # Training size for training CTESN -> Used in parameterSweep.jl
paramSweepStep=0.01 # Discretization of parameter space -> Used in parameterSweep.jl
settlingBand=0.000333 # Envelope within we consider system frequency to have settled (Not-ML)